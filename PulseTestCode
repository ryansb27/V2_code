#include <Wire.h>
#include <LiquidCrystal_I2C.h>

const int sensorPin = 7; // Comparator output connected to Pin 7 (interrupt)
volatile unsigned long pulseCount = 0; // Stores pulse count
volatile unsigned long lastPulseTime = 0; // Stores last pulse timestamp
const unsigned long debounceTime = 10; // Debounce time in milliseconds

// Initialize I2C LCD (16x2 display, address 0x27)
LiquidCrystal_I2C lcd(0x27, 16, 2);

void pulseISR() {
        pulseCount++; 
    
}

void setup() {
    Serial.begin(9600);
    pinMode(sensorPin, INPUT_PULLUP); 
    attachInterrupt(digitalPinToInterrupt(sensorPin), pulseISR, RISING);

    // Initialize LCD
    lcd.init();
    lcd.backlight();
    delay(100); // Small delay to stabilize LCD
    lcd.setCursor(0, 0);
    lcd.print("Pulse Counter");
}

void loop() {
    static unsigned long lastLCDUpdate = 0;
    if (millis() - lastLCDUpdate > 500) { // Only update every 500ms
        lastLCDUpdate = millis();

        // Clear & update LCD
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print("Pulse Counter");
        lcd.setCursor(0, 1);
        lcd.print("Pulses: ");
        lcd.print(pulseCount);
        lcd.print("    "); // Extra spaces to clear old digits
    }

    // Also print to Serial Monitor
    Serial.print("Pulse Count: ");
    Serial.println(pulseCount);
}
